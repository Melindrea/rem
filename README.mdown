rem() is a Sass mixin for setting css properties in rems with fallback values in pixels.

It accepts property values in either px or in rem (but not both at once). Rem values are accepted for the convenience of running computations using rem units first, and generating pixel fallbacks last. Values may be numbers (eg. 6px) or lists (eg. 1px 0 2px auto). CSS value keywords, colors and unitless zero are passed through (that means lists like `1px solid #ccc` work).

rem() outputs two css declarations: the first with numeric values in pixels and the second with equivalent values in rem units. Browsers that don't understand rems will use the fallback values, while the rem declarations will be used by browsers that do.

Written by Ryan L. Frederick based on the work of Ray Brown (https://github.com/bitmanic/rem). For his original version, Ray thanks Chris Eppstein (http://chriseppstein.github.com) and Martin Bavio (http://martinbavio.com).

## Example 1

	// scss
	// for browser default (1rem is 16px)
	.element {
      @include rem(padding, 10px 0 2px 5px);
	}

	/* css output */
    .element {
      padding: 10px 0 2px 5px;
      padding: 1rem 0 0.2rem 0.5rem;
    }

## Example 2

	// scss
	// for $base-line-height: 22px
	.element {
      @include rem(border, 1px solid #ccc);
      @include rem(padding, $base-line-height - 1px);
	}

	/* css output */
    .element {
      border: 1px solid #ccc;
      border: .063rem solid #ccc;
      padding: 21px;
      padding: 1.313rem;
    }